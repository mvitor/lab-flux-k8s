
#
# Configure
#
- hosts: localhost
  become: no
  connection: local
  vars:
    ignore: 1
  tasks:

        - name: Create an EKS cluster
          community.aws.aws_eks_cluster:
            name: my_cluster
            version: 1.14
            role_arn: my_eks_role
            subnets:
              - subnet-aaaa1111
            security_groups:
              - my_eks_sg
              - sg-abcd1234
          register: caller_facts

       - name: Add prometheus-community's chart repository.
         kubernetes.core.helm_repository:
           name: prometheus-community 
           repo_url: "https://prometheus-community.github.io/helm-charts"
         when: ignore == 1
      

       - name: Add Bitnami's chart repository.
         kubernetes.core.helm_repository:
           name: bitnami
           repo_url: "https://charts.bitnami.com/bitnami"

       - name: Add Grafana repository..
         kubernetes.core.helm_repository:
           name: grafana
           repo_url: "https://grafana.github.io/helm-charts"

       - name: Create namespace kafka
         shell: kubectl create namespace kafka
         args:
            executable: /bin/bash  
         when: ignore == 1
       - name: Create CustomResourceDefinition
         become: no
         shell: kubectl create -f https://strimzi.io/install/latest?namespace=kafka -n kafka
         args:
            executable: /bin/bash 
         when: ignore == 1

       - name: kafka-persistent-single.yaml
         become: no
         shell:
             kubectl apply -f kafka/kafka-persistent-single.yaml -n kafka
         args:
            executable: /bin/bash  
         when: ignore == 1
       - name: Wait for Kafka Brokers
         wait_for:
         port: 30094
         delay: 120
         when: ignore == 1
       - name: Run install Kafkadrop
         shell: |
           set timeout 300
           git clone https://github.com/obsidiandynamics/kafdrop
           cd kafdrop/
           helm upgrade -i kafdrop chart --set image.tag=3.27.0 \
            --set kafka.brokerConnect=marcio-cluster-kafka-0.marcio-cluster-kafka-brokers.kafka.svc:9092 \
            --set server.servlet.contextPath="/" \
            --set jvm.opts="-Xms32M -Xmx64M"
           exit 0
         args:
            executable: /bin/bash
         when: ignore == 1
       - name: Wait for Kafkadrop 
         wait_for:
         port: 30900
         delay: 120
         when: ignore == 1
       - name: Create namespace Monitoring
         become: no
         shell: kubectl create namespace monitoring  
         args:
            executable: /bin/bash
         when: ignore == 1
       - name: Create Prometheus
         become: no
         shell: helm install prometheus prometheus-community/kube-prometheus-stack --set grafana.service.type=NodePort --set prometheus.prometheusSpec.podMonitorSelectorNilUsesHelmValues=false --namespace monitoring
         args:
            executable: /bin/bash
         when: ignore == 1
       - name: Configuring Prometheus 1 - 4 = create secret
         become: no
         shell: kubectl create secret generic additional-scrape-configs --from-file=prometheus/prometheus-additional.yaml -n monitoring
         args:
            executable: /bin/bash
       - name: Configuring Prometheus 2 - 4 = pod-monitor
         become: no
         shell: kubectl apply -f prometheus/strimzi-pod-monitor.yaml -n monitoring
         args:
            executable: /bin/bash     

       - name: Pause for 2 minutes to build
         pause:
           minutes: 1

       - name: Configuring Prometheus 3 - 4 = prometheus-rules
         become: no
         shell: kubectl apply -f prometheus/prometheus-rules.yaml -n monitoring
         args:
            executable: /bin/bash  

       - name: Configuring Prometheus 4 - 4 = prometheus.yaml
         shell: kubectl apply -f prometheus/prometheus.yaml -n monitoring
         become: no
         args:
            executable: /bin/bash 
       - name: Wait for Prometheus 
         wait_for:
         port: 30090
         delay: 120            
       - name: Configuring Grafana
         become: no
         shell: helm install grafana -f grafana/grafana.yaml grafana/grafana -n monitoring
         args:
            executable: /bin/bash
       - name: Wait for Grafana 
         wait_for:
         port: 30300
         delay: 120            
       - name: Configuring Producer Kafka
         shell: kubectl apply -f kafka_python/producer.yaml
         args:
            executable: /bin/bash 
       - name: Wait for Producer Python     
         wait_for:
           timeout: 120  
         delegate_to: localhost           
       - name: Configuring Consumer Kafka
         shell: kubectl apply -f kafka_python/consumer.yaml
         args:
            executable: /bin/bash
       - name: display post install message
         debug: 
           msg: 
             - "http://127.0.0.1:30900 - To open Kafkadrop and see topic and messages"
             - "http://127.0.0.1:30090 - Prometheus"
             - "http://127.0.0.1:30300 - Granafa Dashboards"
             - "Broker Kafka: 127.0.0.1:30094"
             - "https://github.com/mvitor/"
             - "To see all pods : kubectl get pods --all-namespaces"